app:
  title: Demo Backstage - AWSome Women Brasil 2025
  baseUrl: http://localhost:3000

organization:
  name: Lab da Aninha

backend:
  reading:
    allow:
      - host: 'github.com'

  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: pg
    connection: 'postgresql://backstage:backstage@localhost:5432/backstage_plugin_app'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

events:
  http:
    baseUrl: http://localhost:7007
  modules:
    http:
      baseUrl: http://localhost:7007

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/integrations/github/locations#configuration
      token: GITHUB_TOKEN
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  #'/api/pagerduty':
   # target: https://api.pagerduty.com
    #changeOrigin: true
    #secure: false
    #pathRewrite:
     # '^/api/pagerduty': ''

pagerDuty:
  accountId: ''
  apiToken: TOKEN_PD
  # Endpoints (normalmente não é preciso mudar):
  eventsBaseUrl: 'https://events.pagerduty.com/v2'
  restBaseUrl: 'https://api.pagerduty.com'

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
    dockerImage: 'spotify/techdocs'
    pullImage: true
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  environment: development
  providers:
    github:
      development:
        clientId: CLIENT_ID_GH
        clientSecret:  CLIENT_SECRET_GH
        signIn:
          resolvers:
            - resolver: usernameMatchingUserEntityName

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Group, User]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml

    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]
      events:
        enabled: true
        http:
          baseUrl: http://localhost:7007

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]

  experimental:
    # Auto discovering all plugins extensions
    packages: all
  extensions:
    # Enabling some entity cards
    # The cards will be displayed in the same order it appears in this setting list
    # Shows a table of components that provides a particular api
    - entity-card:api-docs/providing-components:
        config:
          # Presenting the card ony for entites of kind api
          filter: kind:api
    # Shows a table of components that consumes a particular api
    - entity-card:api-docs/consuming-components:
        config:
          # Presenting the card ony for entites of kind api
          filter: kind:api
    # Enabling some contents
    # The contents will be displayed in the same order it appears in this setting list
    # Shows a "Definition" tab for entities of kind api
    - entity-content:api-docs/definition
    # Shows an "Apis" tab for entities of kind component
    - entity-content:api-docs/apis

kubernetes:
  # see https://backstage.io/docs/features/kubernetes/configuration for kubernetes configuration options

# see https://backstage.io/docs/permissions/getting-started for more on the permission framework
permission:
  # setting this to `false` will disable permissions
  enabled: true
